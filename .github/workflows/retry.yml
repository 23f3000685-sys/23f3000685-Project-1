name: Round 2

on:
  repository_dispatch:
    types: [round2-update]

jobs:
  update-repo:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v4

      # Step 2: Set remote URL to use PAT
      - name: Use PAT for git push
        run: git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository }}.git
        env:
          PAT: ${{ secrets.PAT }}

      # Step 3: Verify student secret
      - name: Verify Secret
        run: |
          SECRET="${{ github.event.client_payload.secret }}"
          if [ "$SECRET" != "${{ secrets.STUDENT_SECRET }}" ]; then
            echo "Invalid secret!"
            exit 1
          fi

      # Step 4: Get brief & round
      - name: Get brief & round
        run: |
          BRIEF="${{ github.event.client_payload.brief }}"
          ROUND="${{ github.event.client_payload.round }}"
          echo "Round: $ROUND, Brief: $BRIEF"

      # Step 5: Modify repo based on brief
      - name: Update code and README
        run: |
          # Example: handle SVG images
          if [[ "$BRIEF" == *"SVG"* ]]; then
            sed -i 's/\.png/\.png|.svg/g' script.js
            echo "Updated script.js to support SVG images"
          fi

          # Update README.md
          echo "## Updates for round $ROUND" >> README.md
          echo "$BRIEF" >> README.md

          # Update round.json
          echo "{ \"round\": $ROUND }" > round.json
          git add round.json README.md script.js
          git commit -m "Round $ROUND updates: $BRIEF" || echo "No changes"

      # Step 6: Push changes
      - name: Push changes
        run: git push origin main

      # Step 7: Wait for Pages deployment
      - name: Wait for Pages deployment
        run: sleep 60

      # Step 8: Get commit SHA
      - name: Get commit SHA
        id: sha
        run: echo "::set-output name=commit_sha::$(git rev-parse HEAD)"

      # Step 9: Notify evaluator
      - name: Notify evaluator
        env:
          EVALUATION_URL: ${{ secrets.EVALUATION_URL }}
          EMAIL: ${{ secrets.EMAIL }}
          TASK: ${{ secrets.TASK }}
          ROUND: ${{ github.event.client_payload.round }}
          NONCE: ${{ secrets.NONCE }}
        run: |
          curl -X POST $EVALUATION_URL \
            -H "Content-Type: application/json" \
            -d "{
              \"email\": \"$EMAIL\",
              \"task\": \"$TASK\",
              \"round\": $ROUND,
              \"nonce\": \"$NONCE\",
              \"repo_url\": \"https://github.com/${{ github.repository }}\",
              \"commit_sha\": \"${{ steps.sha.outputs.commit_sha }}\",
              \"pages_url\": \"https://${{ github.repository_owner }}.github.io/${{ github.repository }}/\"
            }"
